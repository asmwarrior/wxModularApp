// For compilers that support precompilation, includes "wx/wx.h".
#include "wx/wxprec.h"

#ifdef __BORLANDC__
#pragma hdrstop
#endif

#ifndef WX_PRECOMP
#include "wx/wx.h"
#endif

////@begin includes
////@end includes
#include "TestPanel1.h"
#include <wxGuiPluginBase.h>



//(*InternalHeaders(TestPanel1)
#include <wx/button.h>
#include <wx/intl.h>
#include <wx/sizer.h>
#include <wx/string.h>
//*)

//(*IdInit(TestPanel1)
const long TestPanel1::ID_BUTTON1 = wxNewId();
const long TestPanel1::ID_BUTTON2 = wxNewId();
//*)

IMPLEMENT_DYNAMIC_CLASS( TestPanel1, wxGuiPluginWindowBase )

BEGIN_EVENT_TABLE(TestPanel1, wxGuiPluginWindowBase)
    //(*EventTable(TestPanel1)
    //*)
END_EVENT_TABLE()

TestPanel1::TestPanel1(wxGuiPluginBase * plugin, wxWindow* parent,wxWindowID id,const wxPoint& pos,const wxSize& size)
{
    // the Create function call is generated by wxSmith, we have to wrap it to call the wxGuiPluginWindowBase::Create
    // which just copy the plugin parameter and then construct the wxPanal instance
    //
    # define Create(a,b,c,d,e,f) Create(plugin, a, b, c, d, e)


    //(*Initialize(TestPanel1)
    wxBoxSizer* BoxSizer1;

    Create(parent, id, wxDefaultPosition, wxDefaultSize, wxTAB_TRAVERSAL, _T("id"));
    BoxSizer1 = new wxBoxSizer(wxHORIZONTAL);
    Button1 = new wxButton(this, ID_BUTTON1, _("Label"), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_BUTTON1"));
    BoxSizer1->Add(Button1, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    Button2 = new wxButton(this, ID_BUTTON2, _("Label"), wxDefaultPosition, wxDefaultSize, 0, wxDefaultValidator, _T("ID_BUTTON2"));
    BoxSizer1->Add(Button2, 1, wxALL|wxALIGN_CENTER_HORIZONTAL|wxALIGN_CENTER_VERTICAL, 5);
    SetSizer(BoxSizer1);
    //*)

    #undef Create
}

TestPanel1::~TestPanel1()
{
    //(*Destroy(TestPanel1)
    //*)
}

